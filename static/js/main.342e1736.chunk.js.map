{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/redux/phonebook-actions.js","components/redux/phonebook-reducer.js","components/redux/store.js","components/Container/Container.js","components/redux/phonebook-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","items","createReducer","JSON","parse","window","localStorage","getItem","state","filter","contact","_","combineReducers","store","configureStore","reducer","phonebook","phonebookReducer","Container","children","className","s","container","protoType","PropTypes","node","isRequired","getContacts","getFilter","getVisibileContacts","contacts","normalizedContacts","toLocaleLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","target","value","reset","onSubmit","preventDefault","find","alert","formTitle","formText","formInput","type","pattern","title","required","onChange","formBtn","Filter","filterWrapp","filterTitle","filterText","filterInput","ContactList","filteredContacts","setItem","stringify","contactsList","map","contactsItem","contactsBtn","onClick","onDeleteContact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.342e1736.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__1tk8y\",\"contactsItem\":\"ContactList_contactsItem__3NfpP\",\"contactsBtn\":\"ContactList_contactsBtn__1uA1m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__Gk8Sz\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('phonebook/Add', (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('phonebook/Delete');\n\nconst filterContact = createAction('phonebook/Filter');\n\nexport { addContact, deleteContact, filterContact };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, filterContact } from './phonebook-actions';\n\nconst items = createReducer(\n  JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  {\n    [addContact]: (state, { payload }) => [...state, payload],\n\n    [deleteContact]: (state, { payload }) =>\n      state.filter(contact => contact.id !== payload),\n  },\n);\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport phonebookReducer from './phonebook-reducer.js';\n\nconst store = configureStore({\n  reducer: {\n    phonebook: phonebookReducer,\n\n    // работает только в режиме разбработки\n    // devTools: process.env.NODE_ENV === 'development',\n  },\n});\n\nexport default store;\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.protoType = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","const getContacts = state => state.phonebook.items;\nconst getFilter = state => state.phonebook.filter;\n\nconst getVisibileContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedContacts = filter.toLocaleLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLocaleLowerCase().includes(normalizedContacts),\n  );\n};\n\nexport { getContacts, getFilter, getVisibileContacts };\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../redux/phonebook-selectors';\nimport { addContact } from '../redux/phonebook-actions';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  // const onSubmit = () => {\n  //   dispatch(addContact(name, number));\n  // };\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLocaleLowerCase() === name.toLocaleLowerCase(),\n      )\n    ) {\n      return alert(`Name ${name} is already in contacts `);\n    } else if (contacts.find(contact => contact.number === number)) {\n      return alert(`Number ${number} is already in contacts `);\n    }\n\n    // onSubmit((name, number));\n    dispatch(addContact(name, number));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1 className={s.formTitle}>Phonebook</h1>\n      <label>\n        <p className={s.formText}>Name:</p>\n        <input\n          className={s.formInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label>\n        <p className={s.formText}>Number:</p>\n        <input\n          className={s.formInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </label>\n      <button className={s.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../redux/phonebook-actions';\nimport { getFilter } from '../redux/phonebook-selectors';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.filterWrapp}>\n      <h2 className={s.filterTitle}>Contacts</h2>\n      <label>\n        <p className={s.filterText}>Find Contacts By Name</p>\n        <input\n          className={s.filterInput}\n          type=\"text\"\n          value={value}\n          onChange={e => dispatch(filterContact(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../redux/phonebook-actions';\nimport { getContacts, getVisibileContacts } from '../redux/phonebook-selectors';\nimport s from './ContactList.module.css';\n\n// const getVisibileContacts = (contacts, filterValue) => {\n//   const normalizedContacts = filterValue.toLocaleLowerCase();\n\n//   return contacts.filter(({ name }) =>\n//     name.toLocaleLowerCase().includes(normalizedContacts),\n//   );\n// };\n\nexport default function ContactList() {\n  // const contacts = useSelector(state => {\n  //   window.localStorage.setItem(\n  //     'contacts',\n  //     JSON.stringify(state.phonebook.items),\n  //   );\n  //   return getVisibileContacts(state.phonebook.items, state.phonebook.filter);\n  // });\n\n  const filteredContacts = useSelector(getVisibileContacts);\n  const contacts = useSelector(getContacts);\n\n  window.localStorage.setItem('contacts', JSON.stringify(contacts));\n\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n  return (\n    <ul className={s.contactsList}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li className={s.contactsItem} key={id}>\n          {name}: {number}\n          <button\n            className={s.contactsBtn}\n            onClick={() => onDeleteContact(id)}\n            type=\"button\"\n          >\n            X\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n","import Container from './components/Container';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nfunction App() {\r\n  // const [contacts, setContacts] = useState(\r\n  //   () =>\r\n  //     JSON.parse(window.localStorage.getItem('contacts')) ?? [\r\n  //       {\r\n  //         id: 'id-1',\r\n  //         name: 'Rosie Simpson',\r\n  //         number: '459-12-56',\r\n  //       },\r\n  //       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  //       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  //       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  //     ],\r\n  // );\r\n\r\n  // useEffect(() => {\r\n  //   window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  // }, [contacts]);\r\n\r\n  return (\r\n    <Container>\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './components/redux/store';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formTitle\":\"ContactForm_formTitle__1k9Mu\",\"formText\":\"ContactForm_formText__2NiTS\",\"formInput\":\"ContactForm_formInput__z_KOi\",\"formBtn\":\"ContactForm_formBtn__1Mks8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapp\":\"Filter_filterWrapp__2uQOk\",\"filterTitle\":\"Filter_filterTitle__2w5vd\",\"filterText\":\"Filter_filterText__2WgVk\",\"filterInput\":\"Filter_filterInput__MHhkO\"};"],"sourceRoot":""}